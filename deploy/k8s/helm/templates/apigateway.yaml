kind: ConfigMap
apiVersion: v1
metadata:
  name: apigateway-cm
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
data:
  ASPNETCORE_ENVIRONMENT: Development
  ASPNETCORE_URLS: http://0.0.0.0:80
  ENVOY_CATALOG_API_ADDRESS: catalog-api
  ENVOY_CATALOG_API_PORT: "80"
  ENVOY_ORDERING_API_ADDRESS: ordering-api
  ENVOY_ORDERING_API_PORT: "80"
  ENVOY_UID: "1111"

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: apigateway
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
spec:
  replicas: 1
  selector:
    matchLabels:
      service: apigateway
  template:
    metadata:
      labels:
        app: eshop
        service: apigateway
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "apigateway"
        dapr.io/app-port: "80"
        dapr.io/config: "dapr-config"
    spec:
      initContainers:
      - name: proxy-init
        image: openpolicyagent/proxy_init:v8
        # Configure the iptables bootstrap script to redirect traffic to the
        # Envoy proxy on port 80, specify that Envoy will be running as user
        # 1111, and that we want to exclude port 8282 from the proxy for the
        # OPA health checks. These values must match up with the configuration
        # defined below for the "envoy" and "opa" containers.
        args: ["-p", "80", "-u", "1111", "-w", "8282"]
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
      containers:
      - name: apigateway
        image: eshopcontainerreg.azurecr.io/webshoppingapigw:latest
        imagePullPolicy: Always
        securityContext:
          runAsUser: 0        
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
          - name: admin
            containerPort: 8001
            protocol: TCP
          - name: daprhttp
            containerPort: 3500
            protocol: TCP
          - name: daprgrpc
            containerPort: 50001
            protocol: TCP
        envFrom:
          - configMapRef:
              name: apigateway-cm
      - name: opa
        # Note: openpolicyagent/opa:latest-envoy is created by retagging
        # the latest released image of OPA-Envoy.
        image: openpolicyagent/opa:latest-envoy
        args:
        - "run"
        - "--server"
        - "--addr=localhost:8181"
        - "--diagnostic-addr=0.0.0.0:8282"
        - "--set=services.default.url=https://eshopstorage2022.blob.core.windows.net/bundle/"
        - "--set=bundles.default.resource=bundle.tar.gz"
        - "--set=plugins.envoy_ext_authz_grpc.addr=:9191"
        - "--set=plugins.envoy_ext_authz_grpc.path=envoy/authz/allow"
        - "--set=plugins.envoy_ext_authz_grpc.dry-run=true"
        - "--set=decision_logs.console=true"
        - "--set=status.console=true"
        - "--ignore=.*"
        livenessProbe:
          httpGet:
            path: /health?plugins
            scheme: HTTP
            port: 8282
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health?plugins
            scheme: HTTP
            port: 8282
          initialDelaySeconds: 5
          periodSeconds: 5


---

kind: Service
apiVersion: v1
metadata:
  name: apigateway
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
    - port: 8001
      targetPort: 8001
      protocol: TCP
      name: admin
    - port: 8181
      targetPort: 8181
      protocol: TCP
      name: opaserver
    - port: 8282
      targetPort: 8282
      protocol: TCP
      name: opadiag  
    - port: 3500
      targetPort: 3500
      protocol: TCP
      name: daprhttp
    - port: 50001
      targetPort: 50001
      protocol: TCP
      name: daprgrpc
  selector:
    service: apigateway

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apigateway-ingress
  namespace: {{ .Values.namespace }}
  labels:
    app: eshop
    service: apigateway
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  ingressClassName: nginx
  rules:
  - host: {{ .Values.hostName }}
    http:
      paths: 
      - path: /gateway(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: apigateway
            port: 
              number: 80
